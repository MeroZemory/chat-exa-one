# Chat ExaOne 프로젝트 설정
name: chat-exa-one
version: 0.1.0
private: true
main: dist/server/server.js

scripts:
  # YAML 변환
  yaml: node yaml-to-json.mjs
  
  # 개발 관련 스크립트
  dev:build-server: tsc -p server.tsconfig.json --outDir build-dev/server --watch --pretty --incremental
  dev:next: nodemon --watch build-dev/server src --exec "cross-env DIST_DIR=\"build-dev/.next\" next build && cross-env DIR=\"build-dev\" node build-dev/server/server.js" --delay 1
  predev: npm run yaml"
  dev: concurrently -n "build-server,next" -c "blue,green" "npm run dev:build-server" "npm run dev:next"

  # 빌드 테스트 스크립트
  predbuild: npm run yaml
  build: tsc -p server.tsconfig.json --outDir build-test/server --incremental && cross-env DIST_DIR=\"build-test/.next\" next build

  # 배포 관련 스크립트
  predist: npm run yaml && rimraf build-dist dist
  dist: tsc -p server.tsconfig.json --outDir build-dist/server && cross-env NODE_ENV=production DIST_DIR=\"build-dist/.next\" next build
  postdist: >-
    copyfiles -u 2 "build-dist/server/**/*" dist/server/ && 
    copyfiles -u 2 "build-dist/.next/**/*" dist/.next/ && 
    rimraf build-dist &&
    copyfiles package.json dist/
  
  # 서버 실행
  start: >-
    npm install --omit=dev && 
    cross-env NODE_ENV=production node --experimental-fetch server/server.js
  
  start:local: >-
    cd dist && npm run start

  # 기타
  lint: npm run yaml && next lint

# 프로덕션 의존성
dependencies:
  next: 15.1.7
  react: ^19.0.0
  react-dom: ^19.0.0
  react-hot-toast: ^2.5.2
  socket.io: ^4.8.1
  cross-env: ^7.0.3

# 개발 의존성
devDependencies:
  "@eslint/eslintrc": ^3
  "@types/node": ^20.17.19
  "@types/react": ^19
  "@types/react-dom": ^19
  "@types/uuid": ^9.0.8
  uuid: ^9.0.1
  concurrently: ^9.1.2
  copyfiles: ^2.4.1
  eslint: ^9
  eslint-config-next: 15.1.7
  js-yaml: ^4.1.0
  nodemon: ^3.1.9
  postcss: ^8
  prettier: ^3.5.1
  rimraf: ^6.0.1
  socket.io-client: ^4.8.1
  tailwindcss: ^3.4.1
  ts-node: ^10.9.2
  typescript: ^5.7.3
  wait-on: ^7.2.0 